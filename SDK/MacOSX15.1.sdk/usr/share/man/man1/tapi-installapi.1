.TH tapi\-installapi 1 2019-03-25 Darwin "TAPI Tool Documentation"
.SH NAME
tapi\-installapi \- Create a text-based stub file by scanning the header files
.SH SYNOPSIS
\fItapi installapi\fR [options] <directory>

.SH DESCRIPTION
.PP
The installapi command creates a text-based stub file (.tbd) by parsing the
header files that are associated with a framework/dynamic library. The headers
are parsed per default in Objective-C syntax mode. C++ support is still
experimental.
.br 
For information on the complete set of command line options, please use 'tapi installapi --help'

.SH TARGET TRIPLE OPTIONS
.PP
\-target <triple>
.RS 4
Specifies the architecture, platform, and deployment target to use for parsing
the header files. At least one target option must be specified. The <triple>
is the same as the one that is used by clang and has the general format
<arch>-<vendor>-<system>-<abi>. The architecture <arch> specifies the
architecture slice (for example 'x86_64' or 'arm64'). The only supported vendor
by this tool is 'apple'. The system encodes the platform and deployment target.
The abi is optional and the only supported value is 'simulator'.

Examples:
.br
\-target x86_64-apple-macosx10.14 - creates an x86_64 architecture slice for macOS with
a deployment target of 10.14.
.br
\-target arm64-apple-ios12.0 - creates an arm64 architecture slice for iOS with
a deployment target of 12.0.
.br
\-target x86_64-apple-ios12.0-simulator - creates an x86_64 architecture slice for the
iOS simulator with a deployment target of 12.0.
.RE

.SS Alternative target options 

.PP
\-arch <architecture>
.RS 4
Specifies the architectures to use for parsing the headers. At least one
architecture must be specified. 
.RE

.PP
\-mtargetos=<value>
Specifies platform and deployment target to use for parsing header files. 

Examples:
.br 
\-arch arm64 \-mtargetos=macosx10.14 - creates an arm64 architecture slice for macOS with 
a deployment target of 10.14.
.br 
\-arch x86_64 \-mtargetos=ios14-macabi - creates a x86_64 architecture slice for macCatalyst 
with a deployment target of 14.0.
.RE

.SH DEPRECATED TARGET TRIPLE OPTIONS
.PP
\-macosx_version_min <value>
.br
\-ios_version_min <value>
.br
\-watchos_version_min <value>
.br
\-tvos_version_min <value>
.br
.RS 4
This is set to indicate the oldest platform version that that the output is to
be used on. If \-arch is used, specify platform and oldest version 
via \-mtargetos option instead.
.RE

.SH ENVIRONMENT VARIABLES
.PP
MACOSX_DEPLOYMENT_TARGET
.br
IPHONEOS_DEPLOYMENT_TARGET
.br
TVOS_DEPLOYMENT_TARGET
.br
WATCHOS_DEPLOYMENT_TARGET
.RS 4
This is set to indicate the oldest platform version that that the output is to
be used on. See also \-macosx_version_min, \-ios_version_min,
\-watchos_version_min, or \-tvos_version_min. These environment variables are
ignored if any of the minimum deployment targets or the \-target option have
been specified on the command line.
.RE

.PP
LD_NO_ENCRYPT
.br
LD_APPLICATION_EXTENSION_SAFE
.RS 4
Defining either of these environment variables has the same effect as specifying
\-fapplication\-extension on the command line. These enironment variables are
ignored if \-fapplication\-extension or \-fno\-application\-extension are
specified on the command line.
.RE

.SS For information on the complete set of command line options, please use 'tapi installapi --help'

.SH SEE ALSO
tapi(1), ld(1)

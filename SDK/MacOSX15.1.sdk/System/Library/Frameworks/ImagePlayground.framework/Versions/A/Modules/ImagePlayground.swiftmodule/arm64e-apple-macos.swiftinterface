// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.7.43 clang-1600.0.25.3)
// swift-module-flags: -target arm64e-apple-macos15.1 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-bare-slash-regex -user-module-version 41.2 -module-name ImagePlayground
import AVFoundation
import AppKit
import Cocoa
import CoreFoundation
import CoreGraphics
import DeveloperToolsSupport
import Foundation
@_exported import ImagePlayground
import AppKit.NSSpellChecker
import NaturalLanguage
import Observation
import Photos
import Swift
import SwiftUI
import SwiftUICore
import System
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import notify
import os
extension SwiftUICore.View {
  @available(iOS 18.1, macOS 15.1, *)
  @available(visionOS, unavailable)
  @available(watchOS, unavailable)
  @available(tvOS, unavailable)
  @_Concurrency.MainActor @preconcurrency public func imagePlaygroundSheet(isPresented: SwiftUICore.Binding<Swift.Bool>, concepts: [ImagePlayground.ImagePlaygroundConcept] = [], sourceImage: SwiftUICore.Image? = nil, onCompletion: @escaping (Foundation.URL) -> Swift.Void, onCancellation: (() -> Swift.Void)? = nil) -> some SwiftUICore.View
  
  @available(iOS 18.1, macOS 15.1, *)
  @available(visionOS, unavailable)
  @available(watchOS, unavailable)
  @available(tvOS, unavailable)
  @_Concurrency.MainActor @preconcurrency public func imagePlaygroundSheet(isPresented: SwiftUICore.Binding<Swift.Bool>, concepts: [ImagePlayground.ImagePlaygroundConcept] = [], sourceImageURL: Foundation.URL, onCompletion: @escaping (_ url: Foundation.URL) -> Swift.Void, onCancellation: (() -> Swift.Void)? = nil) -> some SwiftUICore.View
  
  @available(iOS 18.1, macOS 15.1, *)
  @available(visionOS, unavailable)
  @available(watchOS, unavailable)
  @available(tvOS, unavailable)
  @_Concurrency.MainActor @preconcurrency public func imagePlaygroundSheet(isPresented: SwiftUICore.Binding<Swift.Bool>, concept: Swift.String, sourceImageURL: Foundation.URL, onCompletion: @escaping (_ url: Foundation.URL) -> Swift.Void, onCancellation: (() -> Swift.Void)? = nil) -> some SwiftUICore.View
  
  @available(iOS 18.1, macOS 15.1, *)
  @available(visionOS, unavailable)
  @available(watchOS, unavailable)
  @available(tvOS, unavailable)
  @_Concurrency.MainActor @preconcurrency public func imagePlaygroundSheet(isPresented: SwiftUICore.Binding<Swift.Bool>, concept: Swift.String, sourceImage: SwiftUICore.Image? = nil, onCompletion: @escaping (_ url: Foundation.URL) -> Swift.Void, onCancellation: (() -> Swift.Void)? = nil) -> some SwiftUICore.View
  
}
@objc @_hasMissingDesignatedInitializers @available(macOS 15.1, *)
@_Concurrency.MainActor @preconcurrency public class ImagePlaygroundViewController : AppKit.NSViewController {
  @objc @_Concurrency.MainActor @preconcurrency public var sourceImage: AppKit.NSImage? {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor @preconcurrency weak public var delegate: (any ImagePlayground.ImagePlaygroundViewController.Delegate)?
  @_Concurrency.MainActor @preconcurrency public var concepts: [ImagePlayground.ImagePlaygroundConcept] {
    get
    set
  }
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func loadView()
  @objc deinit
}
@available(iOS 18.1, macOS 15.1, *)
@available(visionOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
extension ImagePlayground.ImagePlaygroundViewController {
  @objc(available) @_Concurrency.MainActor @preconcurrency dynamic public class var isAvailable: Swift.Bool {
    @objc get
  }
}
@available(iOS 18.1, macOS 15.1, *)
@available(visionOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
extension ImagePlayground.ImagePlaygroundViewController {
  @available(iOS 18.1, macOS 15.1, *)
  @available(visionOS, unavailable)
  @available(watchOS, unavailable)
  @available(tvOS, unavailable)
  @objc(ImageGenerationViewControllerDelegate) public protocol Delegate : ObjectiveC.NSObjectProtocol {
    @objc @_Concurrency.MainActor func imagePlaygroundViewController(_ imagePlaygroundViewController: ImagePlayground.ImagePlaygroundViewController, didCreateImageAt imageURL: Foundation.URL)
    @_Concurrency.MainActor @objc optional func imagePlaygroundViewControllerDidCancel(_ imagePlaygroundViewController: ImagePlayground.ImagePlaygroundViewController)
  }
}
@available(iOS 18, macOS 15, *)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
public struct ImagePlaygroundConcept : Swift.Sendable {
  public static func text(_ text: Swift.String) -> ImagePlayground.ImagePlaygroundConcept
  public static func extracted(from text: Swift.String, title: Swift.String? = nil) -> ImagePlayground.ImagePlaygroundConcept
  @available(*, deprecated, message: "Use extracted(from text: title:) instead.")
  public static func extracted(from text: Swift.String) -> ImagePlayground.ImagePlaygroundConcept
}
extension SwiftUICore.EnvironmentValues {
  @available(iOS 18, macOS 15, *)
  @available(visionOS, unavailable)
  public var supportsImagePlayground: Swift.Bool {
    get
  }
}
@available(iOS 18.1, macOS 15.1, *)
@available(visionOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
extension ImagePlayground.ImagePlaygroundViewController : Swift.Sendable {}

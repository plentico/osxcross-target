// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2 (swiftlang-1103.8.25.8 clang-1103.0.30.20)
// swift-module-flags: -target x86_64-apple-ios13.0-macabi -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftSpriteKit -swift-version 5 -O -enforce-exclusivity=unchecked -module-name SpriteKit
@_exported import SpriteKit
import Swift
import simd
public typealias SKColor = UIKit.UIColor
@available(iOS 10.0, OSX 10.12, tvOS 10.0, watchOS 3.0, *)
extension SKWarpGeometryGrid {
  convenience public init(columns: Swift.Int, rows: Swift.Int, sourcePositions: [Swift.SIMD2<Swift.Float>] = [SIMD2<Float>](), destinationPositions: [Swift.SIMD2<Swift.Float>] = [SIMD2<Float>]())
  public func replacingBySourcePositions(positions source: [Swift.SIMD2<Swift.Float>]) -> SpriteKit.SKWarpGeometryGrid
  public func replacingByDestinationPositions(positions destination: [Swift.SIMD2<Swift.Float>]) -> SpriteKit.SKWarpGeometryGrid
}
extension SKShapeNode : Swift._CustomPlaygroundQuickLookable {
  @available(*, deprecated, message: "SKShapeNode.customPlaygroundQuickLook will be removed in a future Swift version")
  public var customPlaygroundQuickLook: Swift.PlaygroundQuickLook {
    get
  }
}
extension SKSpriteNode : Swift._CustomPlaygroundQuickLookable {
  @available(*, deprecated, message: "SKSpriteNode.customPlaygroundQuickLook will be removed in a future Swift version")
  public var customPlaygroundQuickLook: Swift.PlaygroundQuickLook {
    get
  }
}
extension SKTextureAtlas : Swift._CustomPlaygroundQuickLookable {
  @available(*, deprecated, message: "SKTextureAtlas.customPlaygroundQuickLook will be removed in a future Swift version")
  public var customPlaygroundQuickLook: Swift.PlaygroundQuickLook {
    get
  }
}
extension SKTexture : Swift._CustomPlaygroundQuickLookable {
  @available(*, deprecated, message: "SKTexture.customPlaygroundQuickLook will be removed in a future Swift version")
  public var customPlaygroundQuickLook: Swift.PlaygroundQuickLook {
    get
  }
}

// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2 (swiftlang-1103.8.25.8 clang-1103.0.30.20)
// swift-module-flags: -target x86_64-apple-macosx10.15 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftMetal -swift-version 5 -O -enforce-exclusivity=unchecked -module-name Metal
@_exported import Metal
import Swift
@available(OSX 10.11, iOS 8.0, tvOS 8.0, *)
extension MTLBlitCommandEncoder {
  public func fill(buffer: Metal.MTLBuffer, range: Swift.Range<Swift.Int>, value: Swift.UInt8)
  @available(OSX 10.14, iOS 12.0, tvOS 12.0, *)
  public func resetCommandsInBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, range: Swift.Range<Swift.Int>)
  @available(OSX 10.14, iOS 12.0, tvOS 12.0, *)
  public func copyIndirectCommandBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, sourceRange: Swift.Range<Swift.Int>, destination: Metal.MTLIndirectCommandBuffer, destinationIndex: Swift.Int)
  @available(OSX 10.14, iOS 12.0, tvOS 12.0, *)
  public func optimizeIndirectCommandBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, range: Swift.Range<Swift.Int>)
}
@available(OSX 10.11, iOS 8.0, tvOS 8.0, *)
extension MTLBuffer {
  @available(OSX 10.11, *)
  public func didModifyRange(_ range: Swift.Range<Swift.Int>)
  @available(OSX 10.12, iOS 10.0, tvOS 10.0, *)
  public func addDebugMarker(_ marker: Swift.String, range: Swift.Range<Swift.Int>)
}
@available(OSX 10.11, iOS 8.0, tvOS 8.0, *)
extension MTLComputeCommandEncoder {
  @available(OSX 10.13, iOS 11.0, tvOS 11.0, *)
  public func useResources(_ resources: [Metal.MTLResource], usage: Metal.MTLResourceUsage)
  @available(OSX 10.13, iOS 11.0, tvOS 11.0, *)
  public func useHeaps(_ heaps: [Metal.MTLHeap])
  public func setBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>)
  public func setTextures(_ textures: [Metal.MTLTexture?], range: Swift.Range<Swift.Int>)
  public func setSamplerStates(_ samplers: [Metal.MTLSamplerState?], range: Swift.Range<Swift.Int>)
  public func setSamplerStates(_ samplers: [Metal.MTLSamplerState?], lodMinClamps: [Swift.Float], lodMaxClamps: [Swift.Float], range: Swift.Range<Swift.Int>)
  @available(OSX 10.14, iOS 12.0, tvOS 12.0, *)
  public func memoryBarrier(resources: [Metal.MTLResource])
}
@available(OSX 10.11, iOS 8.0, tvOS 8.0, *)
extension MTLDevice {
  @available(OSX 10.13, iOS 11.0, tvOS 11.0, *)
  public func getDefaultSamplePositions(sampleCount: Swift.Int) -> [Metal.MTLSamplePosition]
}
@available(swift 4)
@available(OSX 10.13, *)
public func MTLCopyAllDevicesWithObserver(handler: @escaping Metal.MTLDeviceNotificationHandler) -> (devices: [Metal.MTLDevice], observer: ObjectiveC.NSObject)
@available(OSX 10.12, iOS 10.0, tvOS 10.0, *)
extension MTLFunctionConstantValues {
  public func setConstantValues(_ values: Swift.UnsafeRawPointer, type: Metal.MTLDataType, range: Swift.Range<Swift.Int>)
}
@available(OSX 10.13, iOS 11.0, tvOS 11.0, *)
extension MTLArgumentEncoder {
  public func setBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>)
  public func setTextures(_ textures: [Metal.MTLTexture?], range: Swift.Range<Swift.Int>)
  public func setSamplerStates(_ samplers: [Metal.MTLSamplerState?], range: Swift.Range<Swift.Int>)
  @available(OSX 10.14, *)
  public func setRenderPipelineStates(_ pipelines: [Metal.MTLRenderPipelineState?], range: Swift.Range<Swift.Int>)
  @available(OSX 10.14, iOS 12.0, tvOS 12.0, *)
  public func setIndirectCommandBuffers(_ buffers: [Metal.MTLIndirectCommandBuffer?], range: Swift.Range<Swift.Int>)
}
@available(OSX 10.11, iOS 8.0, tvOS 8.0, *)
extension MTLRenderCommandEncoder {
  @available(OSX 10.13, iOS 11.0, tvOS 11.0, *)
  public func useResources(_ resources: [Metal.MTLResource], usage: Metal.MTLResourceUsage)
  @available(OSX 10.13, iOS 11.0, tvOS 11.0, *)
  public func useHeaps(_ heaps: [Metal.MTLHeap])
  @available(OSX 10.13, iOS 12.0, *)
  public func setViewports(_ viewports: [Metal.MTLViewport])
  @available(OSX 10.13, iOS 12.0, *)
  public func setScissorRects(_ scissorRects: [Metal.MTLScissorRect])
  public func setVertexBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>)
  public func setVertexTextures(_ textures: [Metal.MTLTexture?], range: Swift.Range<Swift.Int>)
  public func setVertexSamplerStates(_ samplers: [Metal.MTLSamplerState?], range: Swift.Range<Swift.Int>)
  public func setVertexSamplerStates(_ samplers: [Metal.MTLSamplerState?], lodMinClamps: [Swift.Float], lodMaxClamps: [Swift.Float], range: Swift.Range<Swift.Int>)
  public func setFragmentBuffers(_ buffers: [Metal.MTLBuffer?], offsets: [Swift.Int], range: Swift.Range<Swift.Int>)
  public func setFragmentTextures(_ textures: [Metal.MTLTexture?], range: Swift.Range<Swift.Int>)
  public func setFragmentSamplerStates(_ samplers: [Metal.MTLSamplerState?], range: Swift.Range<Swift.Int>)
  public func setFragmentSamplerStates(_ samplers: [Metal.MTLSamplerState?], lodMinClamps: [Swift.Float], lodMaxClamps: [Swift.Float], range: Swift.Range<Swift.Int>)
  @available(OSX 10.14, *)
  public func memoryBarrier(resources: [Metal.MTLResource], after: Metal.MTLRenderStages, before: Metal.MTLRenderStages)
  @available(OSX 10.14, iOS 12.0, tvOS 12.0, *)
  public func executeCommandsInBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, range: Swift.Range<Swift.Int>)
  @available(OSX 10.14, *)
  public func executeCommandsInBuffer(_ buffer: Metal.MTLIndirectCommandBuffer, indirectBuffer indirectRangeBuffer: Metal.MTLBuffer, offset: Swift.Int)
}
@available(OSX 10.14, iOS 12.0, tvOS 12.0, *)
extension MTLIndirectCommandBuffer {
  public func reset(_ range: Swift.Range<Swift.Int>)
}
@available(OSX 10.11, iOS 8.0, tvOS 8.0, *)
extension MTLRenderPassDescriptor {
  @available(OSX 10.13, iOS 11.0, tvOS 11.0, *)
  public func setSamplePositions(_ positions: [Metal.MTLSamplePosition])
  @available(OSX 10.13, iOS 11.0, tvOS 11.0, *)
  public func getSamplePositions() -> [Metal.MTLSamplePosition]
}
@available(OSX 10.11, iOS 8.0, tvOS 8.0, *)
extension MTLTexture {
  @available(OSX 10.11, iOS 9.0, tvOS 9.0, *)
  public func makeTextureView(pixelFormat: Metal.MTLPixelFormat, textureType: Metal.MTLTextureType, levels levelRange: Swift.Range<Swift.Int>, slices sliceRange: Swift.Range<Swift.Int>) -> Metal.MTLTexture?
  @available(OSX 10.15, iOS 13.0, tvOS 13.0, *)
  public func makeTextureView(pixelFormat: Metal.MTLPixelFormat, textureType: Metal.MTLTextureType, levels levelRange: Swift.Range<Swift.Int>, slices sliceRange: Swift.Range<Swift.Int>, swizzle: Metal.MTLTextureSwizzleChannels) -> Metal.MTLTexture?
}
@available(OSX 10.15.4, macCatalyst 13.4, iOS 13.0, *)
extension MTLRasterizationRateSampleArray {
  public subscript(index: Swift.Int) -> Swift.Float {
    get
    set
  }
}
@available(OSX 10.15.4, macCatalyst 13.4, iOS 13.0, *)
extension MTLRasterizationRateLayerDescriptor {
  convenience public init(horizontal: [Swift.Float], vertical: [Swift.Float])
}
@available(OSX 10.15.4, macCatalyst 13.4, iOS 13.0, *)
extension MTLRasterizationRateMapDescriptor {
  convenience public init(screenSize: Metal.MTLSize, label: Swift.String? = nil)
  convenience public init(screenSize: Metal.MTLSize, layer: Metal.MTLRasterizationRateLayerDescriptor, label: Swift.String? = nil)
  convenience public init(screenSize: Metal.MTLSize, layers: [Metal.MTLRasterizationRateLayerDescriptor], label: Swift.String? = nil)
}
